
/*
 * This file was generated by the SOM Compiler.
 * FileName: gfile.h.
 * Generated using:
 *     SOM Precompiler somipc: somc/smemit.c
 *     SOM Emitter emith: somc/smmain.c
 */

#ifndef SOM_GenericFile_h
#define SOM_GenericFile_h


/*
 * The SOM_STRICT_IDL macro means that we can ignore stars
 * in our declarations of objects.
 */
#define SOM_STRICT_IDL 1


/*
 * Passthru lines: File: "C.h", "before"
 */
#define INCL_DOS
  #include <os2.h>

#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef GenericFile
#define GenericFile SOMObject
#endif
#include <somobj.h>

/*
 * Start of user-defined types:
 */
#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */

/*
 * End of user-defined types.
 */

#define GenericFile_MajorVersion 0
#define GenericFile_MinorVersion 0

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define GenericFileNewClass c
#pragma linkage(c, system)
#define GenericFileClassData d
#define GenericFileCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define GenericFile_classObj GenericFileClassData.classObject
#define _GenericFile GenericFile_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass  SOMLINK GenericFileNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(GenericFileNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct GenericFileClassDataStructure {
	SOMAny *classObject;
	somMToken _get_path;
	somMToken _set_path;
	somMToken _get_name;
	somMToken _set_name;
} GenericFileClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct GenericFileCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} GenericFileCClassData;

/*
 * New and Renew macros for GenericFile
 */
#define GenericFileNew() \
	( GenericFileClassData.classObject \
		? (_somNew(GenericFileClassData.classObject)) \
		: ( GenericFileNewClass(GenericFile_MajorVersion, GenericFile_MinorVersion), (_somNew(GenericFileClassData.classObject)) ) )
#define GenericFileRenew(buf) \
	( _somRenew(GenericFileClassData.classObject, buf) )

/*
 * Override method: somInit
 */
#define GenericFile_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * Override method: somUninit
 */
#define GenericFile_somUninit(somSelf) \
	SOMObject_somUninit(somSelf)

/*
 * New Method: _get_path
 */
typedef string   SOMLINK somTP_GenericFile__get_path(GenericFile somSelf, Environment *ev);
#pragma linkage(somTP_GenericFile__get_path, system)
typedef somTP_GenericFile__get_path *somTD_GenericFile__get_path;
#define somMD_GenericFile__get_path "::GenericFile::path"
#define GenericFile__get_path(somSelf,ev) \
    (SOM_Resolve(somSelf, GenericFile, _get_path) \
	(somSelf,ev))
#ifndef SOMGD_get_path
    #if (defined(_get_path) || defined(__get_path))
        #undef _get_path
        #undef __get_path
        #define SOMGD_get_path 1
    #else
        #define __get_path GenericFile__get_path
    #endif /* __get_path */
#endif /* SOMGD_get_path */

/*
 * New Method: _set_path
 */
typedef void   SOMLINK somTP_GenericFile__set_path(GenericFile somSelf, Environment *ev,
		string path);
#pragma linkage(somTP_GenericFile__set_path, system)
typedef somTP_GenericFile__set_path *somTD_GenericFile__set_path;
#define somMD_GenericFile__set_path "::GenericFile::path"
#define GenericFile__set_path(somSelf,ev,path) \
    (SOM_Resolve(somSelf, GenericFile, _set_path) \
	(somSelf,ev,path))
#ifndef SOMGD_set_path
    #if (defined(_set_path) || defined(__set_path))
        #undef _set_path
        #undef __set_path
        #define SOMGD_set_path 1
    #else
        #define __set_path GenericFile__set_path
    #endif /* __set_path */
#endif /* SOMGD_set_path */

/*
 * New Method: _get_name
 */
typedef string   SOMLINK somTP_GenericFile__get_name(GenericFile somSelf, Environment *ev);
#pragma linkage(somTP_GenericFile__get_name, system)
typedef somTP_GenericFile__get_name *somTD_GenericFile__get_name;
#define somMD_GenericFile__get_name "::GenericFile::name"
#define GenericFile__get_name(somSelf,ev) \
    (SOM_Resolve(somSelf, GenericFile, _get_name) \
	(somSelf,ev))
#ifndef SOMGD_get_name
    #if (defined(_get_name) || defined(__get_name))
        #undef _get_name
        #undef __get_name
        #define SOMGD_get_name 1
    #else
        #define __get_name GenericFile__get_name
    #endif /* __get_name */
#endif /* SOMGD_get_name */

/*
 * New Method: _set_name
 */
typedef void   SOMLINK somTP_GenericFile__set_name(GenericFile somSelf, Environment *ev,
		string name);
#pragma linkage(somTP_GenericFile__set_name, system)
typedef somTP_GenericFile__set_name *somTD_GenericFile__set_name;
#define somMD_GenericFile__set_name "::GenericFile::name"
#define GenericFile__set_name(somSelf,ev,name) \
    (SOM_Resolve(somSelf, GenericFile, _set_name) \
	(somSelf,ev,name))
#ifndef SOMGD_set_name
    #if (defined(_set_name) || defined(__set_name))
        #undef _set_name
        #undef __set_name
        #define SOMGD_set_name 1
    #else
        #define __set_name GenericFile__set_name
    #endif /* __set_name */
#endif /* SOMGD_set_name */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define GenericFile_somFree SOMObject_somFree
#define GenericFile_somGetClass SOMObject_somGetClass
#define GenericFile_somGetClassName SOMObject_somGetClassName
#define GenericFile_somGetSize SOMObject_somGetSize
#define GenericFile_somIsA SOMObject_somIsA
#define GenericFile_somIsInstanceOf SOMObject_somIsInstanceOf
#define GenericFile_somRespondsTo SOMObject_somRespondsTo
#define GenericFile_somDispatchV SOMObject_somDispatchV
#define GenericFile_somDispatchL SOMObject_somDispatchL
#define GenericFile_somDispatchA SOMObject_somDispatchA
#define GenericFile_somDispatchD SOMObject_somDispatchD
#define GenericFile_somDispatch SOMObject_somDispatch
#define GenericFile_somClassDispatch SOMObject_somClassDispatch
#define GenericFile_somPrintSelf SOMObject_somPrintSelf
#define GenericFile_somDumpSelf SOMObject_somDumpSelf
#define GenericFile_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_GenericFile_h */
